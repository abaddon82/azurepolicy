{
  "name": "pol-ag-deny-unauthorized-function-app-actions",
  "properties": {
    "displayName": "Restrict Azure Monitor Action Group Trigger Actions to Cross-Subscription Function Apps or not on the Allowed List",
    "description": "Deny Azure Monitor Action Groups that trigger actions to Azure Function Apps located in other subscriptions or not on the allowed list.",
    "metadata": {
      "category": "Monitoring",
      "version": "1.0.0",
      "preview": false,
      "depreciated": false
    },
    "mode": "Indexed",
    "parameters": {
      "effect": {
        "type": "string",
        "metadata": {
          "displayName": "Effect",
          "description": "'Audit' allows a non-compliant resource to be created, but flags it as non-compliant. 'Deny' blocks the resource creation. 'Disable' turns off the policy."
        },
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny"
      },
      "allowedFunctionApps": {
        "type": "array",
        "metadata": {
          "displayName": "Allowed Function Apps",
          "description": "List of resource IDs of allowed Function Apps."
        },
        "defaultValue": []
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "equals": "Microsoft.Insights/actiongroups"
          },
          {
            "count": {
              "field": "Microsoft.Insights/actiongroups/azureFunctionReceivers[*]",
              "where": {
                "allOf": [
                  {
                    "field": "Microsoft.Insights/actiongroups/azureFunctionReceivers[*].functionAppResourceId",
                    "notIn": "[parameters('allowedFunctionApps')]"
                  },
                  {
                    "field": "Microsoft.Insights/actiongroups/azureFunctionReceivers[*].functionAppResourceId",
                    "notLike": "[concat('/subscriptions/', subscription().subscriptionId, '*')]"
                  }
                ]
              }
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    }
  }
}
